#search-controls
  - if params[:qlocation] == nil && user_signed_in?
    - params[:qlocation] = current_user.profile.address

  = form_tag(search_path, method: 'get') do
    .input-group
      = text_field_tag :qlocation, params[:qlocation], class: "form-control input-lg"
      %span.input-group-btn
        %button.btn.btn-default.btn-lg.ion-navigate{id: "gps", :type => "button"}
    = text_field_tag :qskills, params[:qskills], id: "qskill", class: "form-control", placeholder: "Programming lang or framework (e.g. python, ruby on rails)"

    = select_tag :qdomain, options_from_collection_for_select(@domains, 'id', 'name', params[:qdomain]), class: "form-control", include_blank: true, placeholder: 'Domain (Area of expertise)'
    = text_field_tag :qedu,params[:qedu] , class: "form-control", placeholder: "University", id: "qedu"

    %button.search-btn.btn.btn-gray.btn-lg.btn-block{:type => "submit"}
      %i.ion-search
      SEARCH

.map-cont.hidden-xs
  #search-map
:javascript
  $('#qdomain').selectize();

  $("#qlocation").geocomplete({
    details: "form",
    markerOptions: {
      draggable: true
    }
  });

  $('#qskill').selectize({
    plugins: ['remove_button'],
    delimiter: ',',
    maxItems: 3,
    persist: false,
    valueField: 'name',
    labelField: 'name',
    searchField: 'name',
    options: [],
    create: true,
    render: {
      option: function(item, escape) {
        var actors = [];
        for (var i = 0, n = item.length; i < n; i++) {
          actors.push('<span>' + escape(item.autocompletes[i].name) + '</span>');
        }

        return '<div>' +
                  '<span class="name">' + escape(item.name) + '</span>' +
               '</div>';
      }
    },
    load: function(query, callback) {
      if (!query.length) return callback();
      $.ajax({
        url: '/autocompletes/skill.json',
        type: 'GET',
        dataType: 'json',
        data: {
          q: query,
        },
        error: function() {
          callback();
        },
        success: function(res) {
          callback(res.autocompletes);
        }
      });
    }
  });

  $('#qedu').selectize({
    maxItems: 1,
    persist: false,
    valueField: 'name',
    labelField: 'name',
    searchField: 'name',
    options: [],
    create: true,
    render: {
      option: function(item, escape) {
        var actors = [];
        for (var i = 0, n = item.length; i < n; i++) {
          actors.push('<span>' + escape(item.autocompletes[i].name) + '</span>');
        }

        return '<div>' +
                  '<span class="name">' + escape(item.name) + '</span>' +
               '</div>';
      }
    },
    load: function(query, callback) {
      if (!query.length) return callback();
      $.ajax({
        url: '/autocompletes/university.json',
        type: 'GET',
        dataType: 'json',
        data: {
          q: query,
        },
        error: function() {
          callback();
        },
        success: function(res) {
          callback(res.autocompletes);
        }
      });
    }
  });
