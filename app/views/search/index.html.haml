- title "Find geeks by skills to pair program with"
- if params[:qlocation].present?
  - title "#{params[:qskills]} geeks near: #{params[:qlocation]}"
  - description "#{params[:qskills]} geeks near #{params[:qlocation]} you can pair program with them or work on side project, start up or fix your code bugs."

- elsif params[:qskills].present?
  - title "#{params[:qskills]} geeks you can pair program with"
  - description "#{params[:qskills]} geeks you can pair program with them or work on side project, start up or fix your code bugs."

- if params[:qskills].present?
  - keywords params[:qskills].split(',') + %w[geek pair programming pair-program code fix skills location]

.row
  .col-md-4{ id: "side" }
    = render 'search/form'
    #search-map.visible-md.hidden-xs.hidden-sm
    %p.text-center
      MADE BY GEEK WITH
      %span.ion-android-favorite
      FOR GEEKS
  .col-md-offset-4.col-md-8
    .search-items
      = render 'layouts/messages'
      .items-list
        %lu.list-unstyled#search-ul
          = render partial: "profile_search", collection: @search, as: :profile
      .text-center= paginate @search, :outer_window => 0

:scss
  body {
    margin-bottom: 0px;
  }

:javascript

    // var tour = new Tour({
    //   steps: [
    //   {
    //     element: "#brand",
    //     title: "Hi",
    //     content: "Hi Geek i'm a hub for geeks like you, click next to continue the tour or click end tour to end it",
    //     placement: 'bottom'
    //   },
    //   {
    //     element: "#gps",
    //     title: "Location search",
    //     content: "You can searh for geeks by location try enter (cairo, egypt)"
    //   },
    //   {
    //     element: ".selectize-input",
    //     title: "Skills search",
    //     content: "If you are looking for geek who know spasific skills you can enter this skills right heare"
    //   }
    // ]});
    //
    // $(function() {
    //   // Initialize the tour
    //   tour.init();
    //
    //   // Start the tour
    //   tour.start();
    // });


  //the map
  var profiles = #{@search.to_json};

  (function(window, google, mapster) {
    var infowindows = [];
    var markers = [];
    var bounds = new google.maps.LatLngBounds();
    var options = mapster.search_map;
    element = document.getElementById("search-map");
    map = new google.maps.Map(element, options);

    //click event for search result items
    $(".items-list li").click(function() {
      //change the item
      $(".items-list li").addClass('has-hover');
      $(".items-list li").removeClass("active");
      $(this).addClass( "active" );
      $(this).removeClass('has-hover');
      //change the marker
      for(var i= 0; i < markers.length; i++){
        markers[i].setIcon("/images/black_marker.png");
        infowindows[i].close();
        if (markers[i]["id"] == this.id) {
          infowindows[i].open(map, markers[i]);;
          map.setZoom(15);
          map.panTo(markers[i].getPosition());
          markers[i].setIcon("/images/red_marker.png");
        }
      }
    });

    for (var i = 0; i < profiles.length; i++) {
      //get the user location
      var latLng = new google.maps.LatLng(profiles[i].latitude,profiles[i].longitude);

      //set marker
      var marker = new google.maps.Marker({
        position: latLng,
        map: map,
        animation: google.maps.Animation.DROP,
        icon: '/images/black_marker.png',
        title: profiles[i].first_name + " " + profiles[i].last_name
      });
      marker.id = profiles[i].id;

      //set infowindow
      var infowindow = new google.maps.InfoWindow();
      var contentString = "<h4>" + profiles[i].first_name + ' ' + profiles[i].last_name + '</h4>' + profiles[i].address;
      infowindow.setContent(contentString);
      infowindow.id = profiles[i].id;
      infowindows.push(infowindow);

      //set maeker click event
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          //reset all markers
          for (var m = 0; m < profiles.length; m++) {
            markers[m].setIcon("/images/black_marker.png");
            marker.setIcon("/images/red_marker.png");
            infowindows[m].close();
          }

          //get the clicked marker element by ID
          var marker_li = document.getElementById(marker.id);

          //change the marker with click event
          infowindows[i].open(map, marker);
          $('html, body').animate({
               scrollTop:$(marker_li).offset().top -55
          }, 1000);
          $(".items-list li").addClass('has-hover');
          $(".items-list li").removeClass("active");
          $(marker_li).addClass( "active" );
        }
      })(marker, i));
      bounds.extend(marker.getPosition());
      markers.push(marker);
    }

    //calculate center and zoom
    map.setCenter(bounds.getCenter());
    map.fitBounds(bounds);
    var mc = new MarkerClusterer(map, markers);


    function onGeoSuccess(location) {
      $('#qlocation').val(location.formattedAddress);
    }

    function onGeoError(error) {}

    $("#gps").click(function() {
      var html5Options = { enableHighAccuracy: true, timeout: 6000, maximumAge: 0 };
      geolocator.locate(onGeoSuccess, onGeoError, true, html5Options);
    });


  }(window, google, window.Mapster || (window.Mapster = {})));
