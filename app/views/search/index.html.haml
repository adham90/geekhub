.row
  .search-items
    = render 'layouts/messages'
    / .search-filter

    .items-list
      %lu.list-unstyled#search-ul
        = render partial: "profile_search", collection: @search, as: :profile
    .text-center= paginate @search, :outer_window => 0
  .side-map
    #search-map


#pairModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "exampleModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} Ã—
        %h4#exampleModalLabel.modal-title New request
      .modal-body

:javascript

  $('#pairModal').on('show.bs.modal', function (event) {
    var button = $(event.relatedTarget);
    var navigator_name = button.data('navigator-name');
    var modal = $(this);
    modal.find('.modal-title').text('New pair with ' + navigator_name);
  });

  //the map
  var profiles = #{@search.to_json};

  (function(window, google, mapster) {
    var infowindows = [];
    var markers = [];
    var bounds = new google.maps.LatLngBounds();
    var options = mapster.search_map;
    element = document.getElementById("search-map");
    map = new google.maps.Map(element, options);

    //click event for search result items
    $(".items-list li").click(function() {
      //change the item
      $(".items-list li").addClass('has-hover');
      $(".items-list li").removeClass("active");
      $(this).addClass( "active" );
      $(this).removeClass('has-hover');
      //change the marker
      for(var i= 0; i < markers.length; i++){
        markers[i].setIcon("/images/black_marker.png");
        infowindows[i].close();
        if (markers[i]["id"] == this.id) {
          infowindows[i].open(map, markers[i]);;
          map.setZoom(15);
          map.panTo(markers[i].getPosition());
          markers[i].setIcon("/images/red_marker.png");
        }
      }
    });

    for (var i = 0; i < profiles.length; i++) {
      //get the user location
      var latLng = new google.maps.LatLng(profiles[i].latitude,profiles[i].longitude);

      //set marker
      var marker = new google.maps.Marker({
        position: latLng,
        map: map,
        animation: google.maps.Animation.DROP,
        icon: '/images/black_marker.png',
        title: profiles[i].first_name + " " + profiles[i].last_name
      });
      marker.id = profiles[i].id;

      //set infowindow
      var infowindow = new google.maps.InfoWindow();
      var contentString = "<h4>" + profiles[i].first_name + ' ' + profiles[i].last_name + '</h4>' + profiles[i].address;
      infowindow.setContent(contentString);
      infowindow.id = profiles[i].id;
      infowindows.push(infowindow);

      //set maeker click event
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          //reset all markers
          for (var m = 0; m < profiles.length; m++) {
            markers[m].setIcon("/images/black_marker.png");
            marker.setIcon("/images/red_marker.png");
            infowindows[m].close();
          }

          //get the clicked marker element by ID
          var marker_li = document.getElementById(marker.id);

          //change the marker with click event
          infowindows[i].open(map, marker);
          $('html, body').animate({
               scrollTop:$(marker_li).offset().top -55
          }, 1000);
          $(".items-list li").addClass('has-hover');
          $(".items-list li").removeClass("active");
          $(marker_li).addClass( "active" );
        }
      })(marker, i));
      bounds.extend(marker.getPosition());
      markers.push(marker);
    }

    //calculate center and zoom
    map.setCenter(bounds.getCenter());
    map.fitBounds(bounds);
    var mc = new MarkerClusterer(map, markers);
  }(window, google, window.Mapster || (window.Mapster = {})));
